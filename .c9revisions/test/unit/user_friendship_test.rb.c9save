{"ts":1366681353528,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"require 'test_helper'\n\nclass UserFriendshipTest < ActiveSupport::TestCase\n  # test \"the truth\" do\n  #   assert true\n  # end\nend\n"]],"start1":0,"start2":0,"length1":0,"length2":128}]],"length":128}
{"contributors":[],"silentsave":false,"ts":1366681384242,"patch":[[{"diffs":[[0,"e\n  "],[-1,"# test \"the truth\" do\n  #   assert true\n  # end"],[1,"should belong_to(:user_id)"],[0,"\nend"]],"start1":72,"start2":72,"length1":55,"length2":34}]],"length":107,"saved":false}
{"ts":1366681391227,"patch":[[{"diffs":[[0,"user"],[-1,"_id"],[0,")\nen"]],"start1":94,"start2":94,"length1":11,"length2":8}]],"length":104,"saved":false}
{"ts":1366681509289,"patch":[[{"diffs":[[0,"(:user)\n"],[1,"  should belong_to(:friend\n"],[0,"end\n"]],"start1":92,"start2":92,"length1":12,"length2":39}]],"length":131,"saved":false}
{"ts":1366681510568,"patch":[[{"diffs":[[0,"(:friend"],[1,")"],[0,"\nend\n"]],"start1":118,"start2":118,"length1":13,"length2":14}]],"length":132,"saved":false}
{"ts":1366681641094,"patch":[[{"diffs":[[0,"friend)\n"],[1,"  \n  test \"that creating a friendship works\" do\n    UserFriendship.create  user: users(:jason)\n  end\n"],[0,"end\n"]],"start1":120,"start2":120,"length1":12,"length2":113}]],"length":233,"saved":false}
{"ts":1366681719025,"patch":[[{"diffs":[[0,"(:jason)"],[1,", friend: users(:mike)"],[0,"\n  end\ne"]],"start1":214,"start2":214,"length1":16,"length2":38}]],"length":255,"saved":false}
{"ts":1366681751177,"patch":[[{"diffs":[[0,"orks"],[-1,"\" do\n"],[1," without raising an exception\" do\n    assert_nothing_raised do\n    "],[0,"    "]],"start1":167,"start2":167,"length1":13,"length2":75},{"diffs":[[0,"(:mike)\n"],[1,"    end\n"],[0,"  end\nen"]],"start1":299,"start2":299,"length1":16,"length2":24}]],"length":325,"saved":false}
{"ts":1366682234654,"patch":[[{"diffs":[[0,"er)\n"],[-1,"  should belong_to(:friend)\n  \n  test \"that creating a friendship works without raising an exception\" do\n    assert_nothing_raised do\n        UserFriendship.create  user: users(:jason), friend: users(:mike)\n    end\n  end\n"],[0,"end\n"]],"start1":96,"start2":96,"length1":229,"length2":8}]],"length":104,"saved":false}
{"ts":1366683108077,"patch":[[{"diffs":[[0,"ase\n"],[-1,"  should belong_to(:user)\n"],[0,"end\n"]],"start1":70,"start2":70,"length1":34,"length2":8}]],"length":78,"saved":false}
{"ts":1366683182948,"patch":[[{"diffs":[[0,"estCase\n"],[1,"  should belong_to(:user)\n"],[0,"end\n"]],"start1":66,"start2":66,"length1":12,"length2":38}]],"length":104,"saved":false}
{"ts":1366683279635,"patch":[[{"diffs":[[0,"(:user)\n"],[1,"  should belong_to(:friend)\n"],[0,"end\n"]],"start1":92,"start2":92,"length1":12,"length2":40}]],"length":132,"saved":false}
{"ts":1366683395199,"patch":[[{"diffs":[[0,"friend)\n"],[1,"  \n  test \"that creating a friendship works\" do\n    UserFriendship.create user: users(:jason), friend(:mike)\n  end\n"],[0,"end\n"]],"start1":120,"start2":120,"length1":12,"length2":127}]],"length":247,"saved":false}
{"ts":1366683454214,"patch":[[{"diffs":[[0,"orks"],[-1,"\" do\n"],[1," without raising an exception\" do\n      assert_nothing_raised do\n    "],[0,"    "]],"start1":167,"start2":167,"length1":13,"length2":77},{"diffs":[[0,"(:mike)\n"],[1,"      end\n"],[0,"  end\nen"]],"start1":293,"start2":293,"length1":16,"length2":26}]],"length":321,"saved":false}
{"ts":1366683492277,"patch":[[{"diffs":[[0,", friend"],[1,": users"],[0,"(:mike)\n"]],"start1":285,"start2":285,"length1":16,"length2":23}]],"length":328,"saved":false}
{"ts":1366683624150,"patch":[[{"diffs":[[0,":friend)"],[1,", class_name: 'User', foreign_key: 'friend_id'"],[0,"\n  \n  te"]],"start1":119,"start2":119,"length1":16,"length2":62}]],"length":374,"saved":false}
{"ts":1366683785004,"patch":[[{"diffs":[[0,"end)"],[-1,", class_name: 'User', foreign_key: 'friend_id'"],[0,"\n  \n"]],"start1":123,"start2":123,"length1":54,"length2":8}]],"length":328,"saved":false}
{"contributors":[],"silentsave":false,"ts":1366684706791,"patch":[[{"diffs":[[0,"d\n  end\n"],[1,"  \n  test \"that creating a friendship based on user id and friend id works\" do\n    UserFriendship.create user_id: users(:jason).id, friend_id users(:mike).id\n  end\n  \n"],[0,"end\n"]],"start1":316,"start2":316,"length1":12,"length2":179}]],"length":495,"saved":false}
{"ts":1366684728580,"patch":[[{"diffs":[[0,"ike).id\n"],[1,"    assert users(:jason).friends.include?(users(:mike))\n"],[0,"  end\n  "]],"start1":474,"start2":474,"length1":16,"length2":72}]],"length":551,"saved":false}
{"ts":1366684868290,"patch":[[{"diffs":[[0,"riend_id"],[1,":"],[0," users(:"]],"start1":457,"start2":457,"length1":16,"length2":17}]],"length":552,"saved":false}
{"contributors":[],"silentsave":false,"ts":1366759372263,"patch":[[{"diffs":[[0,"ate user"],[-1,"_id"],[0,": users("]],"start1":425,"start2":425,"length1":19,"length2":16},{"diffs":[[0,"(:jason)"],[-1,".id"],[0,", friend"]],"start1":440,"start2":440,"length1":19,"length2":16},{"diffs":[[0,"ike)"],[-1,".id"],[0,"\n   "]],"start1":469,"start2":469,"length1":11,"length2":8}]],"length":543,"saved":false}
{"ts":1366759407899,"patch":[[{"diffs":[[0,"ship.create user"],[1,"_id"],[0,": users(:jason),"]],"start1":417,"start2":417,"length1":32,"length2":35},{"diffs":[[0,"d: users(:jason)"],[1,".id"],[0,", friend_id: use"]],"start1":435,"start2":435,"length1":32,"length2":35},{"diffs":[[0,"users(:mike)"],[1,".id"],[0,"\n    assert "]],"start1":467,"start2":467,"length1":24,"length2":27}]],"length":552,"saved":false}
