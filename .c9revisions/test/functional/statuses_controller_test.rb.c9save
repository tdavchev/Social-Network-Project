{"ts":1366622188514,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"require 'test_helper'\n\nclass StatusesControllerTest < ActionController::TestCase\n  setup do\n    @status = statuses(:one)\n  end\n\n  test \"should get index\" do\n    get :index\n    assert_response :success\n    assert_not_nil assigns(:statuses)\n  end\n\n  test \"should be redirected when not logged in\" do\n    get :new\n    assert_response :redirect\n    assert_redirected_to new_user_session_path\n  end\n\n  test \"should render the new page when logged in\" do\n    sign_in users(:jason)\n    get :new\n    assert_response :success\n  end\n\n  test \"should be logged in to post a status\" do\n    post :create, status: { content: \"Hello\" }\n    assert_response :redirect\n    assert_redirected_to new_user_session_path\n  end\n\n  test \"should create status when logged in\" do\n    sign_in users(:jason)\n\n    assert_difference('Status.count') do\n      post :create, status: { content: @status.content }\n    end\n\n    assert_redirected_to status_path(assigns(:status))\n  end\n\n  test \"should show status\" do\n    get :show, id: @status\n    assert_response :success\n  end\n\n  test \"should redirect edit when not logged in\" do\n    get :edit, id: @status\n    assert_response :redirect\n    assert_redirected_to new_user_session_path\n  end\n\n  test \"should get edit when logged in\" do\n    sign_in users(:jason)\n    get :edit, id: @status\n    assert_response :success\n  end\n\n  test \"should redirect status update when not logged in\" do\n    put :update, id: @status, status: { content: @status.content }\n    assert_response :redirect\n    assert_redirected_to new_user_session_path\n  end\n\n  test \"should update status when logged in\" do\n    sign_in users(:jason)\n    put :update, id: @status, status: { content: @status.content }\n    assert_redirected_to status_path(assigns(:status))\n  end\n\n  test \"should destroy status\" do\n    assert_difference('Status.count', -1) do\n      delete :destroy, id: @status\n    end\n\n    assert_redirected_to statuses_path\n  end\nend\n"]],"start1":0,"start2":0,"length1":0,"length2":1924}]],"length":1924}
{"ts":1366622250125,"patch":[[{"diffs":[[0,"jason)\n\n"],[1,"    assert_difference('Status.count') do\n      post :create, status: { content: @status.content }\n    end\n    \n  test \"should create status for the current user when logged in\" do\n    sign_in users(:jason)\n\n"],[0,"    asse"]],"start1":771,"start2":771,"length1":16,"length2":223}]],"length":2131,"saved":false}
{"ts":1366622309751,"patch":[[{"diffs":[[0," @status.content"],[1,", user_id: users(:Jim).id"],[0," }\n    end\n\n    "]],"start1":1065,"start2":1065,"length1":32,"length2":57}]],"length":2156,"saved":false}
{"contributors":[],"silentsave":false,"ts":1366623020317,"patch":[[{"diffs":[[0,":status))\n  end\n"],[1,"  \n  test \"should update status when current user logged in\" do\n    sign_in users(:jason)\n    put :update, id: @status, status: { content: @status.content, user_id: users(:jim).id }\n    assert_redirected_to status_path(assigns(:status))\n    assert_euqal assigns(:status).user_id, users(:jason).id\n  end\n\n"],[0,"\n  test \"should "]],"start1":1967,"start2":1967,"length1":32,"length2":336}]],"length":2460,"saved":false}
{"ts":1366623221025,"patch":[[{"diffs":[[0," end"],[-1,"\n  \n  test \"should update status when current user logged in\" do\n    sign_in users(:jason)\n    put :update, id: @status, status: { content: @status.content, user_id: users(:jim).id }\n    assert_redirected_to status_path(assigns(:status))\n    assert_euqal assigns(:status).user_id, users(:jason).id\n  end\n"],[1,"z"],[0,"\n\n  "]],"start1":1978,"start2":1978,"length1":312,"length2":9}]],"length":2157,"saved":false}
{"ts":1366623251279,"patch":[[{"diffs":[[0,"   \n"],[-1,"  test \"should create status for the current user when logged in\" do\n    sign_in users(:jason)\n\n    assert_difference('Status.count') do\n      post :create, status: { content: @status.content, user_id: users(:Jim).id }\n    end\n\n    assert_redirected_to status_path(assigns(:status))\n  end"],[0,"\n\n  "]],"start1":886,"start2":886,"length1":296,"length2":8}]],"length":1869,"saved":false}
{"ts":1366623266880,"patch":[[{"diffs":[[0,"nd\n    \n"],[1,"  test \"should create status for the current user when logged in\" do\n    sign_in users(:jason)\n\n    assert_difference('Status.count') do\n      post :create, status: { content: @status.content, user_id: users(:Jim).id }\n    end\n\n    assert_redirected_to status_path(assigns(:status))\n  end"],[0,"\n\n  test"]],"start1":882,"start2":882,"length1":16,"length2":304}]],"length":2157,"saved":false}
{"ts":1366623324365,"patch":[[{"diffs":[[0," end"],[-1,"z"],[0,"\n\n  "]],"start1":1978,"start2":1978,"length1":9,"length2":8}]],"length":2156,"saved":false}
{"contributors":[],"silentsave":false,"ts":1366643047775,"patch":[[{"diffs":[[0,"    end\n"],[1,"  end\n"],[0,"    \n  t"]],"start1":877,"start2":877,"length1":16,"length2":22}]],"length":2162,"saved":false}
{"contributors":[],"silentsave":false,"ts":1366733651270,"patch":[[{"diffs":[[0,"_helper'"],[-1,"\n"],[1,"\r\n\r"],[0,"\nclass S"]],"start1":13,"start2":13,"length1":17,"length2":19},{"diffs":[[0,"TestCase"],[1,"\r"],[0,"\n  setup"]],"start1":74,"start2":74,"length1":16,"length2":17},{"diffs":[[0,"setup do"],[1,"\r"],[0,"\n    @st"]],"start1":86,"start2":86,"length1":16,"length2":17},{"diffs":[[0,"es(:one)"],[1,"\r"],[0,"\n  end"],[-1,"\n"],[1,"\r\n\r"],[0,"\n  test "]],"start1":116,"start2":116,"length1":23,"length2":26},{"diffs":[[0,"et index\" do"],[1,"\r"],[0,"\n    get :in"]],"start1":151,"start2":151,"length1":24,"length2":25},{"diffs":[[0,"t :index"],[1,"\r"],[0,"\n    ass"]],"start1":171,"start2":171,"length1":16,"length2":17},{"diffs":[[0,":success"],[1,"\r"],[0,"\n    ass"]],"start1":201,"start2":201,"length1":16,"length2":17},{"diffs":[[0,"tatuses)"],[1,"\r"],[0,"\n  end"],[-1,"\n"],[1,"\r\n\r"],[0,"\n  test "]],"start1":240,"start2":240,"length1":23,"length2":26},{"diffs":[[0,"ot logged in\" do"],[1,"\r"],[0,"\n    get :new\n  "]],"start1":294,"start2":294,"length1":32,"length2":33},{"diffs":[[0,"do\r\n    get :new"],[1,"\r"],[0,"\n    assert_resp"]],"start1":308,"start2":308,"length1":32,"length2":33},{"diffs":[[0,"sponse :redirect"],[1,"\r"],[0,"\n    assert_redi"]],"start1":339,"start2":339,"length1":32,"length2":33},{"diffs":[[0,"ser_session_path"],[1,"\r"],[0,"\n  end"],[-1,"\n"],[1,"\r\n\r"],[0,"\n  test \"should "]],"start1":387,"start2":387,"length1":39,"length2":42},{"diffs":[[0,"en logged in\" do"],[1,"\r"],[0,"\n    sign_in use"]],"start1":451,"start2":451,"length1":32,"length2":33},{"diffs":[[0,"in users(:jason)"],[1,"\r"],[0,"\n    get :new\n  "]],"start1":478,"start2":478,"length1":32,"length2":33},{"diffs":[[0,"get :new"],[1,"\r"],[0,"\n    ass"]],"start1":500,"start2":500,"length1":16,"length2":17},{"diffs":[[0,"esponse :success"],[1,"\r"],[0,"\n  end"],[-1,"\n"],[1,"\r\n\r"],[0,"\n  test \"should "]],"start1":522,"start2":522,"length1":39,"length2":42},{"diffs":[[0,"a status\" do"],[1,"\r"],[0,"\n    post :c"]],"start1":585,"start2":585,"length1":24,"length2":25},{"diffs":[[0,"Hello\" }"],[1,"\r"],[0,"\n    ass"]],"start1":637,"start2":637,"length1":16,"length2":17},{"diffs":[[0,"sponse :redirect"],[1,"\r"],[0,"\n    assert_redi"]],"start1":660,"start2":660,"length1":32,"length2":33},{"diffs":[[0,"ser_session_path"],[1,"\r"],[0,"\n  end"],[-1,"\n"],[1,"\r\n\r"],[0,"\n  test \"should "]],"start1":708,"start2":708,"length1":39,"length2":42},{"diffs":[[0,"en logged in\" do"],[1,"\r"],[0,"\n    sign_in use"]],"start1":766,"start2":766,"length1":32,"length2":33},{"diffs":[[0,"in users(:jason)"],[-1,"\n"],[1,"\r\n\r"],[0,"\n    assert_diff"]],"start1":793,"start2":793,"length1":33,"length2":35},{"diffs":[[0,"tatus.count') do"],[1,"\r"],[0,"\n      post :cre"]],"start1":837,"start2":837,"length1":32,"length2":33},{"diffs":[[0,"nt }"],[1,"\r"],[0,"\n    end"],[-1,"\n  end\n    \n  test \"should create status for the current user when logged in\" do\n    sign_in users(:jason)\n\n    assert_difference('Status.count') do\n      post :create, status: { content: @status.content, user_id: users(:Jim).id }\n    end\n"],[1,"\r\n\r\n    assert_equal users(:jason), assigns(:status).user\r"],[0,"\n   "]],"start1":907,"start2":907,"length1":255,"length2":75},{"diffs":[[0,"ssigns(:status))"],[1,"\r"],[0,"\n  end"],[-1,"\n"],[1,"\r\n\r"],[0,"\n  test \"should "]],"start1":1017,"start2":1017,"length1":39,"length2":42},{"diffs":[[0,"w status\" do"],[1,"\r"],[0,"\n    get :sh"]],"start1":1062,"start2":1062,"length1":24,"length2":25},{"diffs":[[0,"how, id: @status"],[1,"\r"],[0,"\n    assert_resp"]],"start1":1086,"start2":1086,"length1":32,"length2":33},{"diffs":[[0,"esponse :success"],[1,"\r"],[0,"\n  end"],[-1,"\n"],[1,"\r\n\r"],[0,"\n  test \"should "]],"start1":1116,"start2":1116,"length1":39,"length2":42},{"diffs":[[0,"ogged in\" do"],[1,"\r"],[0,"\n    get :ed"]],"start1":1182,"start2":1182,"length1":24,"length2":25},{"diffs":[[0,"dit, id: @status"],[1,"\r"],[0,"\n    assert_resp"]],"start1":1206,"start2":1206,"length1":32,"length2":33},{"diffs":[[0,"sponse :redirect"],[1,"\r"],[0,"\n    assert_redi"]],"start1":1237,"start2":1237,"length1":32,"length2":33},{"diffs":[[0,"ser_session_path"],[1,"\r"],[0,"\n  end"],[-1,"\n"],[1,"\r\n\r"],[0,"\n  test \"should "]],"start1":1285,"start2":1285,"length1":39,"length2":42},{"diffs":[[0,"en logged in\" do"],[1,"\r"],[0,"\n    sign_in use"]],"start1":1338,"start2":1338,"length1":32,"length2":33},{"diffs":[[0,"sers(:jason)"],[1,"\r"],[0,"\n    get :ed"]],"start1":1369,"start2":1369,"length1":24,"length2":25},{"diffs":[[0," id: @status"],[1,"\r"],[0,"\n    assert_"]],"start1":1397,"start2":1397,"length1":24,"length2":25},{"diffs":[[0,":success"],[1,"\r"],[0,"\n  end"],[-1,"\n"],[1,"\r\n\r"],[0,"\n  test "]],"start1":1431,"start2":1431,"length1":23,"length2":26},{"diffs":[[0,"ogged in\" do"],[1,"\r"],[0,"\n    put :up"]],"start1":1498,"start2":1498,"length1":24,"length2":25},{"diffs":[[0,"status.content }"],[1,"\r"],[0,"\n    assert_resp"]],"start1":1562,"start2":1562,"length1":32,"length2":33},{"diffs":[[0,"redirect"],[1,"\r"],[0,"\n    ass"]],"start1":1601,"start2":1601,"length1":16,"length2":17},{"diffs":[[0,"ion_path"],[1,"\r"],[0,"\n  end"],[-1,"\n"],[1,"\r\n\r"],[0,"\n  test "]],"start1":1649,"start2":1649,"length1":23,"length2":26},{"diffs":[[0,"ogged in\" do"],[1,"\r"],[0,"\n    sign_in"]],"start1":1703,"start2":1703,"length1":24,"length2":25},{"diffs":[[0,"(:jason)"],[1,"\r"],[0,"\n    put"]],"start1":1734,"start2":1734,"length1":16,"length2":17},{"diffs":[[0,"ontent }"],[1,"\r"],[0,"\n    ass"]],"start1":1802,"start2":1802,"length1":16,"length2":17},{"diffs":[[0,"status))"],[1,"\r"],[0,"\n  end"],[-1,"\n"],[1,"\r\n  \r\n  test \"should not update status when nothing changes\" do\r\n    sign_in users(:jason)\r\n    put :update, id: @status, status: { content: @status.content }\r\n    assert_redirected_to status_path(assigns(:status))\r\n  end\r\n\r"],[0,"\n  test "]],"start1":1858,"start2":1858,"length1":23,"length2":247},{"diffs":[[0,"atus\" do"],[1,"\r"],[0,"\n    ass"]],"start1":2123,"start2":2123,"length1":16,"length2":17},{"diffs":[[0,", -1) do"],[1,"\r"],[0,"\n      d"]],"start1":2169,"start2":2169,"length1":16,"length2":17},{"diffs":[[0,"atus"],[1,"\r"],[0,"\n    end"],[-1,"\n"],[1,"\r\n\r"],[0,"\n   "]],"start1":2209,"start2":2209,"length1":17,"length2":20},{"diffs":[[0,"path"],[1,"\r"],[0,"\n  end"],[1,"\r"],[0,"\nend"],[1,"\r"],[0,"\n"]],"start1":2260,"start2":2260,"length1":15,"length2":18}]],"length":2278,"saved":false}
