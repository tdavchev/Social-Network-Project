{"ts":1366622188514,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"require 'test_helper'\n\nclass StatusesControllerTest < ActionController::TestCase\n  setup do\n    @status = statuses(:one)\n  end\n\n  test \"should get index\" do\n    get :index\n    assert_response :success\n    assert_not_nil assigns(:statuses)\n  end\n\n  test \"should be redirected when not logged in\" do\n    get :new\n    assert_response :redirect\n    assert_redirected_to new_user_session_path\n  end\n\n  test \"should render the new page when logged in\" do\n    sign_in users(:jason)\n    get :new\n    assert_response :success\n  end\n\n  test \"should be logged in to post a status\" do\n    post :create, status: { content: \"Hello\" }\n    assert_response :redirect\n    assert_redirected_to new_user_session_path\n  end\n\n  test \"should create status when logged in\" do\n    sign_in users(:jason)\n\n    assert_difference('Status.count') do\n      post :create, status: { content: @status.content }\n    end\n\n    assert_redirected_to status_path(assigns(:status))\n  end\n\n  test \"should show status\" do\n    get :show, id: @status\n    assert_response :success\n  end\n\n  test \"should redirect edit when not logged in\" do\n    get :edit, id: @status\n    assert_response :redirect\n    assert_redirected_to new_user_session_path\n  end\n\n  test \"should get edit when logged in\" do\n    sign_in users(:jason)\n    get :edit, id: @status\n    assert_response :success\n  end\n\n  test \"should redirect status update when not logged in\" do\n    put :update, id: @status, status: { content: @status.content }\n    assert_response :redirect\n    assert_redirected_to new_user_session_path\n  end\n\n  test \"should update status when logged in\" do\n    sign_in users(:jason)\n    put :update, id: @status, status: { content: @status.content }\n    assert_redirected_to status_path(assigns(:status))\n  end\n\n  test \"should destroy status\" do\n    assert_difference('Status.count', -1) do\n      delete :destroy, id: @status\n    end\n\n    assert_redirected_to statuses_path\n  end\nend\n"]],"start1":0,"start2":0,"length1":0,"length2":1924}]],"length":1924}
{"ts":1366622250125,"patch":[[{"diffs":[[0,"jason)\n\n"],[1,"    assert_difference('Status.count') do\n      post :create, status: { content: @status.content }\n    end\n    \n  test \"should create status for the current user when logged in\" do\n    sign_in users(:jason)\n\n"],[0,"    asse"]],"start1":771,"start2":771,"length1":16,"length2":223}]],"length":2131,"saved":false}
{"ts":1366622309751,"patch":[[{"diffs":[[0," @status.content"],[1,", user_id: users(:Jim).id"],[0," }\n    end\n\n    "]],"start1":1065,"start2":1065,"length1":32,"length2":57}]],"length":2156,"saved":false}
{"contributors":[],"silentsave":false,"ts":1366623020317,"patch":[[{"diffs":[[0,":status))\n  end\n"],[1,"  \n  test \"should update status when current user logged in\" do\n    sign_in users(:jason)\n    put :update, id: @status, status: { content: @status.content, user_id: users(:jim).id }\n    assert_redirected_to status_path(assigns(:status))\n    assert_euqal assigns(:status).user_id, users(:jason).id\n  end\n\n"],[0,"\n  test \"should "]],"start1":1967,"start2":1967,"length1":32,"length2":336}]],"length":2460,"saved":false}
{"ts":1366623221025,"patch":[[{"diffs":[[0," end"],[-1,"\n  \n  test \"should update status when current user logged in\" do\n    sign_in users(:jason)\n    put :update, id: @status, status: { content: @status.content, user_id: users(:jim).id }\n    assert_redirected_to status_path(assigns(:status))\n    assert_euqal assigns(:status).user_id, users(:jason).id\n  end\n"],[1,"z"],[0,"\n\n  "]],"start1":1978,"start2":1978,"length1":312,"length2":9}]],"length":2157,"saved":false}
{"ts":1366623251279,"patch":[[{"diffs":[[0,"   \n"],[-1,"  test \"should create status for the current user when logged in\" do\n    sign_in users(:jason)\n\n    assert_difference('Status.count') do\n      post :create, status: { content: @status.content, user_id: users(:Jim).id }\n    end\n\n    assert_redirected_to status_path(assigns(:status))\n  end"],[0,"\n\n  "]],"start1":886,"start2":886,"length1":296,"length2":8}]],"length":1869,"saved":false}
{"ts":1366623266880,"patch":[[{"diffs":[[0,"nd\n    \n"],[1,"  test \"should create status for the current user when logged in\" do\n    sign_in users(:jason)\n\n    assert_difference('Status.count') do\n      post :create, status: { content: @status.content, user_id: users(:Jim).id }\n    end\n\n    assert_redirected_to status_path(assigns(:status))\n  end"],[0,"\n\n  test"]],"start1":882,"start2":882,"length1":16,"length2":304}]],"length":2157,"saved":false}
{"ts":1366623324365,"patch":[[{"diffs":[[0," end"],[-1,"z"],[0,"\n\n  "]],"start1":1978,"start2":1978,"length1":9,"length2":8}]],"length":2156,"saved":false}
{"contributors":[],"silentsave":false,"ts":1366643047775,"patch":[[{"diffs":[[0,"    end\n"],[1,"  end\n"],[0,"    \n  t"]],"start1":877,"start2":877,"length1":16,"length2":22}]],"length":2162,"saved":false}
